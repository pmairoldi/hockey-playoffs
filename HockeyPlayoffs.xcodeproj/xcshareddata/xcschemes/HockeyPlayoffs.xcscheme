<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1430"
   version = "1.7">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES">
      <PreActions>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Update Build"
               scriptText = "#!/bin/bash&#10;&#10;# This script automatically sets the version and short version string of&#10;# an Xcode project from the Git repository containing the project.&#10;#&#10;# To use this script in Xcode, add the contents to a &quot;Run Script&quot; build&#10;# phase for your application target.&#10;&#10;# NOTE: make sure you add a new value to your Info plist called &quot;FullVersion&quot;&#10;#&#10;# NOTE: if you receive error saying &apos;fatal: Not a git responsitory&apos;, make sure |--git-dir| points&#10;# to the root dir of your repo&#10;#&#10;# NOTE: if your git repo has no tags, this would fail, so make sure you create at least one tag&#10;# (I usually create a tag &apos;0.0.0&apos; at the very first commit, you can do the same).&#10;&#10;set -o errexit&#10;set -o nounset&#10;&#10;INFO_PLIST=&quot;${INFOPLIST_FILE}&quot;&#10;&#10;# Get git tag and hash in the FullVersion&#10;FULL_VERSION=$(git --git-dir=&quot;${PROJECT_DIR}/.git&quot; --work-tree=&quot;${PROJECT_DIR}/&quot; describe --dirty | sed -e &apos;s/^v//&apos; -e &apos;s/g//&apos;)&#10;&#10;# Use the latest tag for short version (You&apos;ll have to make sure that all your tags are of the format 0.0.0,&#10;# this is to satisfy Apple&apos;s rule that short version be three integers separated by dots)&#10;# using git tag for version also encourages you to create tags that match your releases&#10;SHORT_VERSION=$(git --git-dir=&quot;${PROJECT_DIR}/.git&quot; --work-tree=&quot;${PROJECT_DIR}/&quot; describe --abbrev=0)&#10;&#10;# I&apos;d like to use the Git commit hash for CFBundleVersion.&#10;# VERSION=$(git --git-dir=&quot;${PROJECT_DIR}/.git&quot; --work-tree=&quot;${PROJECT_DIR}&quot; rev-parse --short HEAD)&#10;&#10;# But Apple wants this value to be a monotonically increasing integer, so&#10;# instead use the number of commits on the master branch. If you like to&#10;# play fast and loose with your Git history, this may cause you problems.&#10;# Thanks to @amrox for pointing out the issue and fix.&#10;VERSION=$(git --git-dir=&quot;${PROJECT_DIR}/.git&quot; --work-tree=&quot;${PROJECT_DIR}/&quot; rev-list master | wc -l)&#10;&#10;defaults write &quot;$INFO_PLIST&quot; CFBundleShortVersionString $SHORT_VERSION&#10;defaults write &quot;$INFO_PLIST&quot; CFBundleVersion $VERSION&#10;defaults write &quot;$INFO_PLIST&quot; FullVersion $FULL_VERSION&#10;&#10;echo &quot;VERSION: ${VERSION}&quot;&#10;echo &quot;SHORT VERSION: ${SHORT_VERSION}&quot;&#10;echo &quot;FULL VERSION: ${FULL_VERSION}&quot;">
               <EnvironmentBuildable>
                  <BuildableReference
                     BuildableIdentifier = "primary"
                     BlueprintIdentifier = "06B321BF2065DCE400C4078F"
                     BuildableName = "HockeyPlayoffs.app"
                     BlueprintName = "HockeyPlayoffs"
                     ReferencedContainer = "container:HockeyPlayoffs.xcodeproj">
                  </BuildableReference>
               </EnvironmentBuildable>
            </ActionContent>
         </ExecutionAction>
      </PreActions>
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "06B321BF2065DCE400C4078F"
               BuildableName = "HockeyPlayoffs.app"
               BlueprintName = "HockeyPlayoffs"
               ReferencedContainer = "container:HockeyPlayoffs.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "NO"
            buildForProfiling = "NO"
            buildForArchiving = "NO"
            buildForAnalyzing = "NO">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "06D0A71F206A0DDA00B1B0F0"
               BuildableName = "Screenshots.xctest"
               BlueprintName = "Screenshots"
               ReferencedContainer = "container:HockeyPlayoffs.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES">
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "06B321BF2065DCE400C4078F"
            BuildableName = "HockeyPlayoffs.app"
            BlueprintName = "HockeyPlayoffs"
            ReferencedContainer = "container:HockeyPlayoffs.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
      <Testables>
         <TestableReference
            skipped = "NO">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "06B321D92065DCF200C4078F"
               BuildableName = "HockeyPlayoffsTests.xctest"
               BlueprintName = "HockeyPlayoffsTests"
               ReferencedContainer = "container:HockeyPlayoffs.xcodeproj">
            </BuildableReference>
         </TestableReference>
         <TestableReference
            skipped = "NO">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "06D0A71F206A0DDA00B1B0F0"
               BuildableName = "Screenshots.xctest"
               BlueprintName = "Screenshots"
               ReferencedContainer = "container:HockeyPlayoffs.xcodeproj">
            </BuildableReference>
         </TestableReference>
      </Testables>
   </TestAction>
   <LaunchAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "06B321BF2065DCE400C4078F"
            BuildableName = "HockeyPlayoffs.app"
            BlueprintName = "HockeyPlayoffs"
            ReferencedContainer = "container:HockeyPlayoffs.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
      <AdditionalOptions>
         <AdditionalOption
            key = "NSZombieEnabled"
            value = "YES"
            isEnabled = "YES">
         </AdditionalOption>
      </AdditionalOptions>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Release"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "06B321BF2065DCE400C4078F"
            BuildableName = "HockeyPlayoffs.app"
            BlueprintName = "HockeyPlayoffs"
            ReferencedContainer = "container:HockeyPlayoffs.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
   </ArchiveAction>
</Scheme>
